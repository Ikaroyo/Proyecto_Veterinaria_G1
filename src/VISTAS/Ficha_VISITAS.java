/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VISTAS;

import veterinaria_MODELO.Cliente;
import veterinaria_MODELO.Mascota;
import veterinaria_MODELO.Tratamiento;
import veterinaria_MODELO.Visita;
import static VISTAS.Menu_PRINCIPAL_VETERINARIA.escritorio;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Barbara
 */
public class Ficha_VISITAS extends javax.swing.JInternalFrame {

    /**
     * Creates new form Ficha_CLIENTE2
     */
    public Ficha_VISITAS() {
        initComponents();

        Tratamientos_Visita(); // inicializa con listado de tratamientos activos
        fechaVisita();         // inicializa con le fecha de hoy  

        // inicio la funcion de validacion de campos para el formulario
        validacionDeCampos();
        jTableVisitas.setAutoCreateRowSorter(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel(){

            String str="/IMAGENES/fondo_VISITAS.png";
            ImageIcon icon = new ImageIcon(getClass().getResource(str));
            Image image = icon.getImage();

            public void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.drawImage(image, 0, 0,getWidth(),getHeight(), this);
            }

        }
        ;
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jlFecha_V = new javax.swing.JLabel();
        jlN_DE_VISITA = new javax.swing.JLabel();
        jlPrecio_V = new javax.swing.JLabel();
        jlprecio_V = new javax.swing.JLabel();
        jlMascota_V = new javax.swing.JLabel();
        jlDuenio = new javax.swing.JLabel();
        jlSintomas = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jrbACTIVO = new javax.swing.JRadioButton();
        jlLISTAR_Visita = new javax.swing.JLabel();
        jlSALIR = new javax.swing.JLabel();
        jbuscarClienteV = new javax.swing.JLabel(){
            String str="/IMAGENES/search.png";
            ImageIcon icon = new ImageIcon(getClass().getResource(str));
            Image image = icon.getImage();

            public void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.drawImage(image, 0, 0,getWidth(),getHeight(), this);
            }
        };
        jLIMPIAR = new javax.swing.JLabel();
        jlTratamiento_V = new javax.swing.JLabel();
        jcMascotaV = new javax.swing.JComboBox<>();
        jtDNI_duenio_V = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jlPeso_V = new javax.swing.JLabel();
        jcbTratamientos_V = new javax.swing.JComboBox<>();
        jdcFechaV = new com.toedter.calendar.JDateChooser();
        jtfPeso = new javax.swing.JTextField();
        jtfSintomas = new javax.swing.JTextField();
        jtID_VISITA = new javax.swing.JTextField();
        jlGUARDAR_VISITA = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableVisitas = new javax.swing.JTable();
        jbDesactivar = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setResizable(true);
        setPreferredSize(new java.awt.Dimension(700, 700));

        jPanel1.setPreferredSize(new java.awt.Dimension(700, 700));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 630, 10));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 610, 10));

        jlFecha_V.setBackground(new java.awt.Color(255, 255, 255));
        jlFecha_V.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jlFecha_V.setForeground(new java.awt.Color(255, 255, 255));
        jlFecha_V.setText("Fecha :");
        jPanel1.add(jlFecha_V, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        jlN_DE_VISITA.setBackground(new java.awt.Color(255, 255, 255));
        jlN_DE_VISITA.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jlN_DE_VISITA.setForeground(new java.awt.Color(255, 255, 255));
        jlN_DE_VISITA.setText("Visita N° :");
        jPanel1.add(jlN_DE_VISITA, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, -1));

        jlPrecio_V.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jlPrecio_V.setForeground(new java.awt.Color(255, 255, 255));
        jlPrecio_V.setText("Valor de la consulta :    $");
        jPanel1.add(jlPrecio_V, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 340, 230, 20));

        jlprecio_V.setBackground(new java.awt.Color(255, 255, 255));
        jlprecio_V.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jlprecio_V.setEnabled(false);
        jlprecio_V.setOpaque(true);
        jPanel1.add(jlprecio_V, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 340, 80, 20));

        jlMascota_V.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlMascota_V.setForeground(new java.awt.Color(255, 255, 255));
        jlMascota_V.setText("Mascota :");
        jPanel1.add(jlMascota_V, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 120, 90, 20));

        jlDuenio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlDuenio.setForeground(new java.awt.Color(255, 255, 255));
        jlDuenio.setText("DNI Dueño:");
        jPanel1.add(jlDuenio, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 100, 20));

        jlSintomas.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlSintomas.setForeground(new java.awt.Color(255, 255, 255));
        jlSintomas.setText("Sintomas:");
        jPanel1.add(jlSintomas, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, 70, 20));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, 590, 10));

        jrbACTIVO.setBackground(new java.awt.Color(255, 255, 255));
        jrbACTIVO.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jrbACTIVO.setText("Activa");
        jrbACTIVO.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jrbACTIVO.setEnabled(false);
        jPanel1.add(jrbACTIVO, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 220, 70, 20));

        jlLISTAR_Visita.setBackground(new java.awt.Color(51, 51, 255));
        jlLISTAR_Visita.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jlLISTAR_Visita.setForeground(new java.awt.Color(255, 255, 255));
        jlLISTAR_Visita.setText(" LISTAR VISITAS DE MASCOTA");
        jlLISTAR_Visita.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jlLISTAR_Visita.setOpaque(true);
        jlLISTAR_Visita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlLISTAR_VisitaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jlLISTAR_VisitaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jlLISTAR_VisitaMouseExited(evt);
            }
        });
        jPanel1.add(jlLISTAR_Visita, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 480, 290, -1));

        jlSALIR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/close.png"))); // NOI18N
        jlSALIR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jlSALIR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlSALIRMouseClicked(evt);
            }
        });
        jPanel1.add(jlSALIR, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 390, 60, 50));

        jbuscarClienteV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jbuscarClienteV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbuscarClienteVMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbuscarClienteVMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jbuscarClienteVMouseExited(evt);
            }
        });
        jPanel1.add(jbuscarClienteV, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, 50, 50));

        jLIMPIAR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/clear.png"))); // NOI18N
        jLIMPIAR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLIMPIAR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLIMPIARMouseClicked(evt);
            }
        });
        jPanel1.add(jLIMPIAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 390, 60, 50));

        jlTratamiento_V.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlTratamiento_V.setForeground(new java.awt.Color(255, 255, 255));
        jlTratamiento_V.setText("Tratamiento :");
        jPanel1.add(jlTratamiento_V, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 180, 140, 20));

        jcMascotaV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jcMascotaV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcMascotaVMouseClicked(evt);
            }
        });
        jcMascotaV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcMascotaVActionPerformed(evt);
            }
        });
        jPanel1.add(jcMascotaV, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 120, 190, -1));

        jtDNI_duenio_V.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtDNI_duenio_VKeyTyped(evt);
            }
        });
        jPanel1.add(jtDNI_duenio_V, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 140, -1));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 570, 10));
        jPanel1.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 320, 570, 10));

        jlPeso_V.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlPeso_V.setForeground(new java.awt.Color(255, 255, 255));
        jlPeso_V.setText("Peso:");
        jPanel1.add(jlPeso_V, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, 70, 20));

        jcbTratamientos_V.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jcbTratamientos_V.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTratamientos_VActionPerformed(evt);
            }
        });
        jPanel1.add(jcbTratamientos_V, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 180, 220, -1));

        jdcFechaV.setEnabled(false);
        jPanel1.add(jdcFechaV, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 140, -1));

        jtfPeso.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfPeso.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtfPeso.setMargin(new java.awt.Insets(2, 5, 2, 5));
        jtfPeso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfPesoActionPerformed(evt);
            }
        });
        jPanel1.add(jtfPeso, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 270, 70, 20));

        jtfSintomas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtfSintomas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfSintomasActionPerformed(evt);
            }
        });
        jPanel1.add(jtfSintomas, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 270, 280, 40));

        jtID_VISITA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtID_VISITA.setEnabled(false);
        jPanel1.add(jtID_VISITA, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 220, 70, 20));

        jlGUARDAR_VISITA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/GUARDAR_VISITA_ICONO.png"))); // NOI18N
        jlGUARDAR_VISITA.setText(" ");
        jlGUARDAR_VISITA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jlGUARDAR_VISITA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlGUARDAR_VISITAMouseClicked(evt);
            }
        });
        jPanel1.add(jlGUARDAR_VISITA, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 390, 50, 50));
        jPanel1.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 470, 580, 10));

        jTableVisitas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Visita N°  ", "Tratamiento", "Fecha ", "Peso", "Sintomas ", "Precios", "Activa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Double.class, java.lang.String.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableVisitas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableVisitasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableVisitas);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 510, 620, 90));

        jbDesactivar.setText("Desactivar");
        jbDesactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDesactivarActionPerformed(evt);
            }
        });
        jPanel1.add(jbDesactivar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 220, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void validacionDeCampos() {
        Menu_PRINCIPAL_VETERINARIA.vcampos.SNumero(jtDNI_duenio_V);
        Menu_PRINCIPAL_VETERINARIA.vcampos.SDouble(jtfPeso);
    }
    private void jcMascotaVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcMascotaVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcMascotaVActionPerformed

    private void jbuscarClienteVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbuscarClienteVMouseClicked

        if (!jtDNI_duenio_V.getText().isEmpty()) {
            // con el DNI del cliente busco al cliente //
            Cliente c = Menu_PRINCIPAL_VETERINARIA.cd.buscarClientexDNI(Long.parseLong(jtDNI_duenio_V.getText()));

//  opcion de cargar un nuevo cliente //
            if (c == null) {
                // si el dni no existe //   

                String[] options = {"Si", "No"};

                int x = JOptionPane.showOptionDialog(null, "¿Desea agregar un nuevo cliente?",
                        "Selecciona una opcion",
                        JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);

                //si //
                if (x == 0) {

                    escritorio.removeAll();
                    Menu_PRINCIPAL_VETERINARIA.mostrarFichaCliente();

// lleva el usuario a la ficha del cliente para que lo agregue a la base de datos 
// si elige "NO"  se limpia para nueva carga de visita 
                } else {
                    jtDNI_duenio_V.setText("");
                }

            } // si el cliente existe , verificar que tenga mascota activa
            else {
                // Lista a todas la mascotas de ese cliente //
                List<Mascota> m = Menu_PRINCIPAL_VETERINARIA.md.buscarMascotas_x_Cliente(c);
                // if m es null , cartel agregar mascota //
                // show dialog option yes to open Ficha_Mascota or no to do nothing
                if (m == null) {
                    String[] options = {"Si", "No"};

                    int x = JOptionPane.showOptionDialog(null, "¿Desea agregar una nueva mascota?",
                            "Selecciona una opcion",
                            JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);

                    //si //
                    if (x == 0) {
                        escritorio.removeAll();
                        Menu_PRINCIPAL_VETERINARIA.mostrarFichaMascota();
                    } else {

                    }
                } else {

                    jcMascotaV.removeAllItems(); //borra datos anteriores //

                    for (Mascota m1 : m) {

                        jcMascotaV.addItem(m1);
                    }
                    listarVisitasMascota();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Por favor coloque un DNI");
            jtDNI_duenio_V.requestFocus();
        }
    }//GEN-LAST:event_jbuscarClienteVMouseClicked

    private void jcbTratamientos_VActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTratamientos_VActionPerformed
        // TODO add your handling code here:
        // devuelve el precio de cada tratamiento en label : precio //
        jlprecio_V.setText(Double.toString(((Tratamiento) jcbTratamientos_V.getSelectedItem()).getPrecio()));


    }//GEN-LAST:event_jcbTratamientos_VActionPerformed

    private void jtfPesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfPesoActionPerformed
        // TODO add your handling code here:

        // cargar peso a mano//
    }//GEN-LAST:event_jtfPesoActionPerformed

    private void jtfSintomasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfSintomasActionPerformed
        // TODO add your handling code here:

        // cargar sintomas //
    }//GEN-LAST:event_jtfSintomasActionPerformed

    private void jlGUARDAR_VISITAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlGUARDAR_VISITAMouseClicked
        if (validarFormulario()) {
            Visita v = new Visita();

            // FECHA DE LA VISITA//
            SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");

            String fecha = formato.format(jdcFechaV.getDate()); // FORMATO: date de jcalendar a string//

            DateTimeFormatter formato2 = DateTimeFormatter.ofPattern("dd-MM-yyyy"); // FORMATO: de string a localDate//

            LocalDate FechaV = LocalDate.parse(fecha, formato2);

            v.setFecha_visita(FechaV);
//---------------------------------------------------------------------------------------------------------------------

//PESO //
            v.setPeso(Double.parseDouble(jtfPeso.getText()));

//---------------------------------------------------------------------------------------------------------------------
// ESTADO //-------------------------------------------------------------------------------------------------------------
            v.setActivo(true);
            jrbACTIVO.setSelected(true);

//-------------------------------------------------------------------------------------------------------------------------
// MASCOTA -----------------------------------------------------------------------------------------------------------------
            Mascota m = (Mascota) jcMascotaV.getSelectedItem();
//  retorna la mascota que hizo la visita //

            v.setMascota(m);
// se agrega mascota a la visita //

//TRATAMIENTO--------------------------------------------------------------------------------------------------------------
            Tratamiento t = (Tratamiento) jcbTratamientos_V.getSelectedItem();

            v.setTratamiento(t);
//--------------------------------------------------------------------------------------------------------------------------
// SINTOMAS --------------------------------------------------------------------------------------------------------------
            v.setSintomas(jtfSintomas.getText());
            Menu_PRINCIPAL_VETERINARIA.vd.agregarVisita(v);
            if (v.getIdvisita() != -1) {
                Menu_PRINCIPAL_VETERINARIA.md.actualizarPesoPromedio(m.getId_mascota());
                jrbACTIVO.setSelected(v.isActivo()); // esta activo?//
                jtID_VISITA.setText(Integer.toString(v.getIdvisita())); // completa el id de visita //
            }

        }
    }//GEN-LAST:event_jlGUARDAR_VISITAMouseClicked

    private boolean validarFormulario() {
        if (jtDNI_duenio_V.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor ingrese el DNI del cliente");
            jtDNI_duenio_V.requestFocus();
            return false;
        }
        if (jcMascotaV.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Por favor busque un cliente que tenga mascotas");
            return false;
        }
        if (jtfPeso.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor ingrese el peso");
            jtfPeso.requestFocus();
            return false;
        }
        return true;
    }

    private void jLIMPIARMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLIMPIARMouseClicked
        // TODO add your handling code here:

        limpiar();


    }//GEN-LAST:event_jLIMPIARMouseClicked

    private void jlSALIRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlSALIRMouseClicked
        // TODO add your handling code here:

        dispose();
    }//GEN-LAST:event_jlSALIRMouseClicked

    private void jtDNI_duenio_VKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtDNI_duenio_VKeyTyped

    }//GEN-LAST:event_jtDNI_duenio_VKeyTyped

    private void jlLISTAR_VisitaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlLISTAR_VisitaMouseClicked
        listarVisitasMascota();
    }//GEN-LAST:event_jlLISTAR_VisitaMouseClicked
    private void listarVisitasMascota() {

        if (jcMascotaV.getItemCount() == 0) {
            JOptionPane.showMessageDialog(null, "No se ha cargado ninguna mascota, debe buscar un cliente con mascotas");
        } else if (jcMascotaV.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna mascota");
        } else {
            // lista llena de los items del combobos Mascota//
            List<Visita> listarVisitas = Menu_PRINCIPAL_VETERINARIA.vd.buscarVisitaxFecha((Mascota) jcMascotaV.getSelectedItem());

            // TABLA // ----------------------------------------------------------------------------------------------      
            DefaultTableModel model = (DefaultTableModel) jTableVisitas.getModel();
            model.setRowCount(0); // BORRA TODAS LAS LINEAS Y VUELVE A 0//

            for (Visita v1 : listarVisitas) {
                model.addRow(new Object[]{v1.getIdvisita(), v1.getTratamiento().getTipo_tratamiento(), v1.getFecha_visita(), v1.getPeso(), v1.getSintomas(), v1.getTratamiento().getPrecio(), v1.isActivo()});
            }
        }
    }
    private void jlLISTAR_VisitaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlLISTAR_VisitaMouseEntered
        jlLISTAR_Visita.setBackground(new Color(100, 100, 255));
    }//GEN-LAST:event_jlLISTAR_VisitaMouseEntered

    private void jlLISTAR_VisitaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlLISTAR_VisitaMouseExited
        jlLISTAR_Visita.setBackground(new Color(51, 51, 255));
    }//GEN-LAST:event_jlLISTAR_VisitaMouseExited

    private void jbuscarClienteVMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbuscarClienteVMouseEntered

    }//GEN-LAST:event_jbuscarClienteVMouseEntered

    private void jbuscarClienteVMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbuscarClienteVMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jbuscarClienteVMouseExited

    private void jTableVisitasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVisitasMouseClicked
        if (evt.getClickCount() == 2) {
            Visita v1;
            int row = jTableVisitas.getSelectedRow();
            if (Boolean.parseBoolean(jTableVisitas.getValueAt(row, 6).toString())) {
                v1 = Menu_PRINCIPAL_VETERINARIA.vd.buscarVisita(Integer.parseInt(jTableVisitas.getValueAt(row, 0).toString()));
                llenarFormVisita(v1);
            } else {
                int opcion = JOptionPane.showOptionDialog(null, "No puede cargar visita, se encuentra desactivada ¿Desea activar la visita?", "Activar Visita", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
                if (opcion == 0) {

                    Menu_PRINCIPAL_VETERINARIA.vd.activarVisita(Integer.parseInt(jTableVisitas.getValueAt(row, 0).toString()));
                    JOptionPane.showMessageDialog(null, "Visita activada");
                    llenarFormVisita(Menu_PRINCIPAL_VETERINARIA.vd.buscarVisita(Integer.parseInt(jTableVisitas.getValueAt(row, 0).toString())));
                }
            }

        }
    }//GEN-LAST:event_jTableVisitasMouseClicked

    private void jcMascotaVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcMascotaVMouseClicked
        listarVisitasMascota();
    }//GEN-LAST:event_jcMascotaVMouseClicked

    private void jbDesactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDesactivarActionPerformed
        if (jtID_VISITA.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna visita");
        } else {
            int opcion = JOptionPane.showOptionDialog(null, "¿Desea desactivar la visita?", "Desactivar Visita", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
            if (opcion == 0) {
                Menu_PRINCIPAL_VETERINARIA.vd.desactivarVisita(Integer.parseInt(jtID_VISITA.getText()));
                
                limpiar();
            }
        }

    }//GEN-LAST:event_jbDesactivarActionPerformed

    private void llenarFormVisita(Visita p_visita) {
        jtID_VISITA.setText(String.valueOf(p_visita.getIdvisita()));
        jcbTratamientos_V.setSelectedItem(p_visita.getTratamiento());
        //jdcFechaV.setDate(p_visita.getFecha_visita());
        jdcFechaV.setDate(Date.from(p_visita.getFecha_visita().atStartOfDay(ZoneId.systemDefault()).toInstant()));
        jtfPeso.setText(String.valueOf(p_visita.getPeso()));
        jtfSintomas.setText(p_visita.getSintomas());
        jlprecio_V.setText(String.valueOf(p_visita.getTratamiento().getPrecio()));
        jrbACTIVO.setSelected(p_visita.isActivo());
    }

    private void limpiar() {
        jtID_VISITA.setText("");
        jtDNI_duenio_V.setText("");
        jcMascotaV.removeAllItems(); // comboBox//
        jrbACTIVO.setSelected(false);
        jtfPeso.setText("");
        jtfSintomas.setText("");
        
                DefaultTableModel modelo = (DefaultTableModel) jTableVisitas.getModel();
        modelo.setRowCount(0);

    }

// metodo: trae todos los tratamientos activos //
    public void Tratamientos_Visita() {

        List<Tratamiento> t = Menu_PRINCIPAL_VETERINARIA.td.obtenerTratamientos();

        for (Tratamiento t1 : t) {

            jcbTratamientos_V.addItem(t1);

        }

    }

    // metodo: fecha de la visita: HOY //
    public void fechaVisita() {
        LocalDate localDate = LocalDate.now();
        Date date = java.sql.Date.valueOf(localDate);
        jdcFechaV.setDate(date);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLIMPIAR;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableVisitas;
    private javax.swing.JButton jbDesactivar;
    private javax.swing.JLabel jbuscarClienteV;
    private javax.swing.JComboBox<Mascota> jcMascotaV;
    private javax.swing.JComboBox<Tratamiento> jcbTratamientos_V;
    private com.toedter.calendar.JDateChooser jdcFechaV;
    private javax.swing.JLabel jlDuenio;
    private javax.swing.JLabel jlFecha_V;
    private javax.swing.JLabel jlGUARDAR_VISITA;
    private javax.swing.JLabel jlLISTAR_Visita;
    private javax.swing.JLabel jlMascota_V;
    private javax.swing.JLabel jlN_DE_VISITA;
    private javax.swing.JLabel jlPeso_V;
    private javax.swing.JLabel jlPrecio_V;
    private javax.swing.JLabel jlSALIR;
    private javax.swing.JLabel jlSintomas;
    private javax.swing.JLabel jlTratamiento_V;
    private javax.swing.JLabel jlprecio_V;
    private javax.swing.JRadioButton jrbACTIVO;
    private javax.swing.JTextField jtDNI_duenio_V;
    private javax.swing.JTextField jtID_VISITA;
    private javax.swing.JTextField jtfPeso;
    private javax.swing.JTextField jtfSintomas;
    // End of variables declaration//GEN-END:variables
}
